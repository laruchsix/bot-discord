{"mappings":"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","sources":["src/app/index.jsx","src/app/components/Menu.jsx","src/app/components/Login.jsx","src/app/components/utils/MenuButton.jsx","src/app/components/Detector/Detector.jsx","src/app/components/Detector/DSChoser.jsx","src/app/components/utils/MySelector.jsx","src/app/components/Detector/DetectorTable.jsx","src/app/components/Detector/DetectorForm.jsx"],"sourcesContent":["import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./style/index.css\"\r\nimport Menu from \"./components/Menu\"\r\n\r\nReactDOM.render(<Menu />, document.getElementById(\"root\"));\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n    NavLink,\r\n    useNavigate\r\n} from \"react-router-dom\";\r\n\r\nimport \"../style/Menu.css\";\r\nimport Login from \"./Login\";\r\nimport MenuButton from \"./utils/MenuButton\";\r\nimport Detector from \"./Detector/Detector\";\r\n\r\nconst Menu = () => {\r\n\r\n    const [token, setToken] = useState(\"initial\");\r\n    const [titlePage, setTitlePage] = useState(\"Home\");\r\n\r\n    useEffect(() => {\r\n        fetch('/api/cookie')\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                setToken(data.token);\r\n            }); \r\n    }, []);\r\n\r\n\r\n    const updateToken = (value) => {\r\n        setToken(value);\r\n    }\r\n\r\n    const updateTitlePage = (value) => { \r\n        setTitlePage(value);\r\n    }\r\n\r\n    const userElems = () => {\r\n        if (!token || token === \"initial\") {\r\n            return (\r\n                <NavLink className={\"nav-button\"} to=\"/login\"> Login </NavLink>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                    <h1 className={\"user-name\"}>{token.username}</h1>\r\n                    <button className={\"nav-button\"} onClick={logout}>Logout</button>\r\n                </>\r\n            );\r\n                \r\n        }\r\n            /*return (\r\n               <>\r\n                   <h1 className={\"user-name\"}>{token.name}</h1>\r\n                <button className={\"nav-button\"} onClick={logout}>Logout</button>\r\n\r\n                <div className={\"user-container\"}>\r\n                    <Link  className={\"nav-button\"} to=\"/profile\">\r\n                        <img\r\n                            className={\"user-img\"}\r\n                            src=\"/basic_user_image.png\"\r\n                            alt=\"User Image\"/>\r\n                    </Link>\r\n                </div> \r\n            </>)*/\r\n        \r\n    }\r\n\r\n    const logout = () => {\r\n        let options = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        fetch('/api/logout', options)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                console.log(data.message);\r\n                setToken();\r\n            });\r\n    }\r\n\r\n    const pressMenu = () => {\r\n        console.log(\"pressMenu\"); \r\n    }\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <header>\r\n                <MenuButton onClick={pressMenu}/>\r\n                <div className={\"title-container\"}>\r\n                    <h1 className={\"title\"}>{titlePage}</h1>\r\n                </div>\r\n                <div className={\"user-info\"}>\r\n                    {userElems()}\r\n                </div>\r\n            </header>\r\n            <div className={\"center-container\"}>\r\n                <aside>\r\n                    <NavLink className={\"nav-link\"} to=\"/\">Home</NavLink>\r\n                    {\r\n                    (token?.username) && \r\n                        <NavLink className={\"nav-link\"} to=\"/detector\">Detector</NavLink>\r\n                    }\r\n                    {\r\n                        (token?.isAdmin) &&\r\n                            <NavLink className={\"nav-link\"} to=\"/manage\">Manage User</NavLink>\r\n                    } \r\n                </aside>\r\n                <div className=\"center-right-container\">\r\n                    <div className={\"page-content\"}>\r\n                        <Routes>\r\n                            <Route path=\"/profile\" element={<h1>Profile</h1>} />\r\n                            <Route path=\"/login\" element={<Login \r\n                                                            token={token} \r\n                                                            updateToken={updateToken}\r\n                                                            title={titlePage}\r\n                                                            updateTitle={updateTitlePage} />} />\r\n                            <Route path=\"/detector\" element={<Detector \r\n                                                            token={token} \r\n                                                            updateToken={updateToken}\r\n                                                            title={titlePage}\r\n                                                            updateTitle={updateTitlePage}/>} />\r\n                            <Route path=\"/\" element={<h1>Home</h1>} />\r\n                        </Routes>\r\n                    </div>\r\n                    <footer>\r\n                        <div className=\"copyright-content\">©Thibault Rucher</div>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n            \r\n        </BrowserRouter>\r\n\r\n    );\r\n}\r\n\r\nexport default Menu;","import React, {useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../style/Login.css\";\r\n\r\nconst Login = ({updateToken, token, title, updateTitle}) => {\r\n    useEffect(() => {\r\n        if (title !== \"Login\") {\r\n            updateTitle(\"Login\");\r\n        }\r\n    }, [title])\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const validate = (e) => {\r\n        e.preventDefault();\r\n        const body = JSON.stringify({\"username\":name, \"password\" : password});\r\n        let options = {\r\n            method: \"POST\",\r\n            body: body,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        fetch('api/login', options)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                if (data.error) {\r\n                    setErrorMessage(data.error);\r\n                } else {\r\n                    fetch('/api/cookie')\r\n                        .then(response => response.json())\r\n                        .then((data) => {\r\n                            updateToken(data.token);\r\n                            navigate('/');\r\n                        });\r\n                } })\r\n    }\r\n\r\n    return (\r\n        <div className={\"center-content\"}>\r\n            <form className=\"login-panel \" onSubmit={(e) => validate(e)}>\r\n                <h2 className=\"page-h2 login-segment\">Email :</h2>\r\n                <input className=\"basic-input\" type={\"text\"} value = {name} onChange={(e)=>setName(e.currentTarget.value)} />\r\n                <h2 className=\"page-h2 login-segment\">Password :</h2>\r\n                <input className=\"basic-input\" type={\"password\"} value = {password} onChange={(e)=>setPassword(e.currentTarget.value)} />\r\n                <div><p className={\"error-message\"}>{errorMessage}</p></div>\r\n                <div className={\"center-content\"}>\r\n                    <button className={\"page-button medium-button login-button\"}>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n","import React from \"react\";\r\n\r\nconst MenuButton = (props) => {\r\n    const {onClick} = props;\t// onClick is a function\r\n\r\n\r\n    return (\r\n        <div className=\"menu-button-container\" onClick={onClick}>\r\n            <div className=\"menu-button\">\r\n                <div className=\"menu-button-item1\"></div>\r\n                <div className=\"menu-button-item2\"></div>\r\n                <div className=\"menu-button-item3\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuButton;","import React, {useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport DSChoser from \"./DSChoser\";\r\nimport DetectorTable from \"./DetectorTable\";\r\nimport \"./Detector.css\"\r\nimport DetectorFrom from \"./DetectorForm\";\r\n\r\nconst Detector = ({updateToken, token, title, updateTitle}) => {\r\n    const navigate = useNavigate();\r\n\r\n    // verify the token and redirect to the home page if it is not valid\r\n    useEffect(() => {\r\n        if (!token) {\r\n            navigate(\"/login\");\r\n        }\r\n    }, []);\r\n\r\n    // change the title of the page\r\n    useEffect(() => {\r\n        if (title !== \"Detector\"){\r\n            updateTitle(\"Detector\");\r\n        }\r\n    }, [title])\r\n\r\n    const [serverChoosed, setServerChoosed] = useState(\"\"); \r\n    const [detectors, setDetectors] = useState([]);\r\n\r\n    const getDetectors = () => {\r\n        if (serverChoosed) {\r\n            fetch(\"api/user/detector/\" + serverChoosed.value)\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                console.log(response);\r\n                setDetectors(response);\r\n            });\r\n        }\r\n    }\r\n\r\n    const updateServerChoosed = (server) => {\r\n        if (server !== serverChoosed) {\r\n            setServerChoosed(server);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getDetectors();\r\n    }, [serverChoosed]);\r\n\r\n    return (\r\n        <div className=\"detector-container\">\r\n            <DSChoser \r\n                serverChoosed={serverChoosed} \r\n                updateServerChoosed={updateServerChoosed}/>\r\n\r\n            <DetectorTable \r\n                serverChoosed={serverChoosed}\r\n                getDetectors={getDetectors}\r\n                detectors={detectors}/> \r\n                \r\n            <DetectorFrom\r\n                serverChoosed={serverChoosed}\r\n                getDetectors={getDetectors}\r\n                updateToken={updateToken}/>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default Detector;","import React, {useEffect, useState} from \"react\";\r\nimport MySelector from \"../utils/MySelector\";\r\nimport \"./DSChoser.css\";\r\n\r\n\r\nconst DSChoser = ({serverChoosed, updateServerChoosed}) => {\r\n    return (\r\n        <div className=\"selecter-container\">\r\n            <MySelector service={\"/api/user/discordserver/\"} object={serverChoosed} updateObjet={updateServerChoosed}/>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default DSChoser;","import React, {useState, useEffect} from 'react';\r\nimport Select from 'react-select';\r\n\r\nconst MySelector = ({ service, updateObjet, isMulti = false, isDisabled = false, object, refresh = true, className, ...rest }) => {\r\n    const [apiResponse, setApiResponse] = useState({\r\n      data: {},\r\n      loading: true,\r\n    });\r\n  \r\n    useEffect(() => {\r\n      fetch(service)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (refresh) {\r\n            if (apiResponse !== data) updateObjet(\"\");\r\n          }\r\n          //console.log(data);\r\n          setApiResponse({\r\n            data: data,\r\n            loading: false,\r\n          });\r\n        });\r\n    }, [service]);\r\n  \r\n    /**\r\n     * When the user changes the value of the input, update the state of the component with the new\r\n     * value.\r\n     */\r\n    const handleChange = (event) => {\r\n      const value = event;\r\n      updateObjet(value);\r\n    };\r\n  \r\n    /* A ternary operator. If the apiResponse.loading is true, it will return the first part of the\r\n    ternary operator. If it is false, it will return the second part of the ternary operator. */\r\n    if (apiResponse.loading) return <p>LOADING ...</p>;\r\n    return (\r\n      <>\r\n        {isMulti ? (\r\n          <Select isMulti onChange={handleChange} value={object} options={apiResponse.data} style={{ width: \"max-content\" }} isDisabled={isDisabled} {...rest} />\r\n        ) : (\r\n          <Select onChange={handleChange} value={object} options={apiResponse.data} style={{ width: \"max-content\" }} isDisabled={isDisabled} isClearable {...rest} />\r\n        )}\r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default MySelector;","import React from \"react\";\r\nimport \"./DetectorTable.css\"\r\n\r\nconst DetectorTable = ({ serverChoosed, getDetectors, detectors }) => {\r\n\r\n    const deleteDetector = (id) => {\r\n        fetch(\"/api/user/detector/\" + id, {\r\n            method: \"DELETE\"\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200)\r\n                    getDetectors();\r\n            });\r\n    }\r\n\r\n    // display the table\r\n    const displayTable = () => {\r\n        if (serverChoosed && detectors) {\r\n            return (\r\n                <table className=\"detector-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Is Mutli</th>\r\n                            <th>Word</th>\r\n                            <th>Probability</th>\r\n                            <th>Response Type</th>\r\n                            <th>Response</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            detectors.map((detector) => {\r\n                                return (\r\n                                    <tr key={detector.id}>\r\n                                        <td>{detector.isMulti}</td>\r\n                                        <td>{detector.word}</td>\r\n                                        <td>{detector.probability}</td>\r\n                                        <td>{detector.responseType}</td>\r\n                                        <td>{detector.response}</td>\r\n                                        <td><button onClick={() => deleteDetector(detector.id)}>Delete</button></td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            )\r\n        } else {\r\n            return (\r\n                <p>You have to chose a server</p>\r\n            )\r\n        }\r\n    }\r\n\r\n    // render component\r\n    return (\r\n        <div className=\"detector-table\">\r\n            <h1>detector-table</h1>\r\n            {displayTable()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DetectorTable;","import React, {useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport \"./DetectorForm.css\";\r\n\r\nconst DetectorFrom = ({ serverChoosed, getDetectors, updateToken }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    // form attributs\r\n    const [isMulti, setIsMulti] = useState(false);\r\n    const [wordDetected, setWordDetected] = useState(\"\");\r\n    const [response, setResponse] = useState(\"\");\r\n    const [responseType, setResponseType] = useState(\"\");\r\n    // TODO add probability\r\n\r\n    // reponseType options\r\n    const responseTypeOptions = [\r\n        { value: \"react\", label: \"react\" },\r\n        { value: \"awnser\", label: \"awnser\" }\r\n    ]\r\n\r\n\r\n    /**\r\n     * function to submit the detector into the database\r\n     * @param e the event\r\n     */\r\n     const addDetector = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!wordDetected || !response || !responseType) {\r\n            setErrorMessage(\"Please fill all the fields\");\r\n            return;\r\n        } else {\r\n            setErrorMessage(\"\");\r\n            const body = JSON.stringify({\r\n                dsId : serverChoosed.value,\r\n                isMulti : isMulti,\r\n                word: wordDetected,\r\n                response: response,\r\n                responseType: responseType.value,\r\n                probability: 100\r\n            });\r\n\r\n            //console.log(body);\r\n\r\n            fetch('api/user/detector', {\r\n                method: \"POST\",\r\n                body: body,\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"application/json\"\r\n                }\r\n            })\r\n                .then((response) => {\r\n                    switch (response.status) {\r\n                        case 401:\r\n                            updateToken();\r\n                            navigate(\"/\");\r\n                            break;\r\n                        case 400:\r\n                            return response.json();\r\n                        default:\r\n                            setErrorMessage(\"\");\r\n                            getDetectors();\r\n                    }\r\n                })\r\n                .then((response) => {\r\n                    if (response?.errorMessage) {\r\n                        setErrorMessage(response.errorMessage);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * display a form to add a detector is the server is selected\r\n     * @returns {JSX.Element|null} the form to add a detector line or null elem\r\n     */\r\n    const displayForm = () => {\r\n        if (serverChoosed) {\r\n            return (\r\n                <form className={\"add-detector\"} onSubmit={(e) => addDetector(e)}>\r\n                    \r\n                    <h1 className=\"page-h1\">Add a detector option</h1>\r\n\r\n                    <h2 className=\"page-h2\">Is multi detection ?</h2>\r\n                    <input \r\n                        type={\"checkbox\"} \r\n                        value = {isMulti} \r\n                        onChange={(e)=>setIsMulti(e.currentTarget.value)} />\r\n\r\n                    <h2 className=\"page-h2\">Main word:</h2>\r\n                    <input \r\n                        className=\"basic-input\" \r\n                        type={\"text\"} \r\n                        value={wordDetected} \r\n                        onChange={(e)=>setWordDetected(e.currentTarget.value)} />\r\n\r\n                    <h2 className=\"page-h2\">Response Type:</h2>\r\n                    <Select \r\n                        className=\"basic-input\"\r\n                        value={responseType}\r\n                        options={responseTypeOptions}\r\n                        onChange={setResponseType}/>\r\n\r\n                    <h2 className=\"page-h2\">Response :</h2>\r\n                    <input \r\n                        className=\"basic-input\" \r\n                        type={\"text\"} \r\n                        value={response} \r\n                        onChange={(e)=>setResponse(e.currentTarget.value)} />\r\n                    \r\n                    {\r\n                        errorMessage && \r\n                            <p className=\"error-message\">{errorMessage}</p>\r\n                    }\r\n                    <button className={\"page-button medium-button\"}>Add</button>\r\n                </form>\r\n            )\r\n        } else {\r\n            return (\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // render component\r\n    return (\r\n        <div className=\"detector-form\">\r\n            {displayForm()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DetectorFrom;"],"names":[],"version":3,"file":"index.js.map"}